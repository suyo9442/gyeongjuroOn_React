import React, { useEffect, useState } from "react";
import "../css/App.css";
import axios from "axios";

// axios Î™®Îìà
// import { boardAxios } from '../api/boardAxios';

// Table Ïª¥Ìè¨ÎÑåÌä∏
import Table from "../components/table/Table";
import { async } from "@firebase/util";

function Board() {
  const [initData, setInitData] = useState({});
  const [pageIdx, setPageIdx] = useState(1);
  const [clickIs, setClickIs] = useState(0);
  const [modalOpen, setModalOpen] = useState(false);
  const [formOpen, setFormOpen] = useState(false);
  const [usrName, setUsrName] = useState('');
  const [email, setEmail] = useState('');
  const [password, setpassword] = useState('');


function postPage(){
    axios.post('http://192.168.0.111:10010/test/selectuser', {
        "perPage": 10,
        "currentPage": 1,  
    }).then((res)=>{
        console.log(res.data.userList);
        // return res.data;
    })
}
useEffect(()=>{
    const tester = async() => {
        const res = await postPage();
        setInitData(res)
    }
    tester();
    // console.log(initData)
}, [])


// ÌéòÏù¥ÏßÄ Î≤àÌò∏Î•º postÎ°ú Î≥¥ÎÇ¥Í≥†, Ìï¥Îãπ Îç∞Ïù¥ÌÑ∞ Í≤åÏãúÌåêÏóê ÎøåÎ¶¨Í∏∞
// function pagePost(e) {
//     setPageIdx(parseInt(e.target.innerText));

//     axios.post('http://192.168.0.111:10010/test/selectuser', {
//         "perPage": 10,
//         "currentPage": pageIdx,  
//     })
//     .then((res)=>{
//         const stringiFy = JSON.stringify(res.data.userList);
//         localStorage.setItem('initData', stringiFy);
//         console.log(pageIdx)
//     })
// }


// üìç ÌÅ¥Î¶≠Ìïú Í≤åÏãúÍ∏ÄÏùò idÎ•º Î∞õÏïÑÏôÄ Ìï¥Îãπ Îç∞Ïù¥ÌÑ∞Î•º Î™®Îã¨Ï∞ΩÏóê ÎøåÎ¶º
function detailPost(num) {
return axios
    .post("http://192.168.0.111:10010/test/getuser", { usrId: num })
    .then((res) => {
    const stringiFy = JSON.stringify(res.data);
    localStorage.setItem('userId', stringiFy);

    return res.data;
    });
}
// Î™®Îã¨Ï∞ΩÏù¥ ÎùÑÏñ¥ÏßÑ ÌõÑ Î°úÏª¨Ïä§ÌÜ†Î¶¨ÏßÄÍ∞Ä ÏóÖÎéÉÎêòÎäî Î¨∏Ï†ú Ìï¥Í≤∞ ‚ùóÔ∏è
async function modal(num) {
const info = await detailPost(num);

if (info && modalOpen) {
    setModalOpen(false);
} else setModalOpen(true);
}
// Î™®Îã¨Ï∞ΩÏóê ÎøåÎ¶¥ Îç∞Ïù¥ÌÑ∞
const local2 = JSON.parse(localStorage.getItem("userId"));


// üìç Îì±Î°ùÏùÑ ÎàÑÎ•¥Î©¥ ÌèºÏ∞ΩÏù¥ Ïó¥Î¶¨Í≥†, input valueÎ•º ÎÑ£Ïñ¥ÏÑú postÏöîÏ≤≠
function addPost(e) {
e.preventDefault();
const {target: {name, value}} = e;

if(name === 'name') {
    setUsrName(value);
    console.log(usrName)
} else if (name === 'email') {
    setEmail(value)
    console.log(email)
} else if (name === 'password') {
    setpassword(value)
    console.log(password)
}
}
// ÌèºÏùÑ Ï†úÏ∂úÌïòÎ©¥ Ïù¥Î¶Ñ, ÏïÑÏù¥Îîî, ÎπÑÎ≤àÏùÑ post ÏöîÏ≤≠
function addSubmit(e) {
e.preventDefault();

if(usrName && email && password) {
    axios.post('http://192.168.0.111:10010/test/insertuser', {
        "usrNm": usrName,
        "usrId": email,
        "usrPw": password,
    }).then((res)=>{ console.log(res) })
    console.log('Ï†úÏ∂úÏÑ±Í≥µ !')
} else {
    console.log('Ïã§Ìå® !')
}
}


  return (
    <>
      <div className="addBtn">
        <button className="btn_blue" onClick={()=>setFormOpen(true)}>Îì±Î°ù</button>
      </div>

      <Table
        headerName={[
          "ÏÇ¨Ïö©ÏûêÏïÑÏù¥Îîî",
          "ÏÇ¨Ïö©ÏûêÎ™Ö",
          "ÏÇ¨Ïö©Ïú†Î¨¥",
          "ÏÉùÏÑ±Ïùº",
          "ÏàòÏ†ïÏùº",
          "ÏàòÏ†ïÏûê",
        ]}
      >
        {/* {initData.data.map((item, index) => {
          return (
            <tr
              key={index}
              onClick={() => {
                modal(item.USR_ID);
              }}
            >
              <td>{item.USR_ID}</td>
              <td>{item.RGST_BY}</td>
              <td>{item.USE_YN}</td>
              <td>{item.RGST_DATE}</td>
              <td>Ï§ÄÎπÑÏ§ë</td>
              <td>Ï§ÄÎπÑÏ§ë</td>
            </tr>
          );
        })} */}
      </Table>

      <ul className="pageIdx">
        <li>1</li>
        <li>2</li>
        <li>3</li>
        <li>4</li>
        <li>5</li>
      </ul>

      {modalOpen === true ? (
        <div className="detailModal_wrap modal_wrap">
          <div className="detailModal modal_inner">
            <button className="closeBtn" onClick={() => setModalOpen(false)}>
              X
            </button>
            
            <ul className="modal_list">
                <li>
                    <span>ÏÇ¨Ïö©Ïûê ÏïÑÏù¥Îîî: </span>
                    <span className="modal_cont">{local2.usrId}</span>
                </li>
                <li>
                    <span>ÏÇ¨Ïö©ÏûêÎ™Ö: </span>
                    <span className="modal_cont">{local2.rgstBy}</span>
                </li>
                <li>
                    <span>ÏÇ¨Ïö©Ïú†Î¨¥: </span>
                    <span className="modal_cont">{local2.useYn}</span>
                </li>
                <li>
                    <span>ÏÉùÏÑ±Ïùº: </span>
                    <span className="modal_cont">{local2.rgstDate}</span>
                </li>
            </ul>
          </div>
        </div>
      ) : null}

      {
        formOpen === true ? (
            <div className="addForm_wrap modal_wrap">
                <div className="addForm modal_inner">
                    <button className="closeBtn" onClick={() => setFormOpen(false)}>
                    X
                    </button>
        
                    <form className="add_form" onSubmit={addSubmit}>
                        <p>
                            <span>Ïù¥Î¶Ñ</span>
                            <input 
                            type="text"
                            name="name" 
                            defaultValue={usrName}
                            required
                            onChange={addPost}
                            />
                        </p>

                        <p>
                            <span>ÏïÑÏù¥Îîî</span>
                            <input 
                            type="text"
                            name="email"
                            defaultValue={email}
                            required 
                            onChange={addPost}
                            />
                        </p>

                        <p>
                            <span>Ìå®Ïä§ÏõåÎìú</span>
                            <input 
                            type="password"
                            name="password"
                            defaultValue={password}
                            required
                            onChange={addPost}
                            />
                        </p>
                            <input className="btn_blue" type="submit" value="Îì±Î°ù" />
                    </form>
                </div>
            </div>
        ) 
        : null
      }
    </>
  );
}

export default Board;
